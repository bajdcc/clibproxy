<script src="/jquery-3.3.1.min.js"></script>
    <style type="text/css">

        #url-nav {
            position: fixed;
            //top:0;
            left:0;
            width:100%;
            //margin:0;
            z-index: 2100000000;
            -moz-user-select: none;
            -khtml-user-select: none;
            -webkit-user-select: none;
            -o-user-select: none;
            border-bottom:1px solid #151515;
            //background:#555;
            background:#1a1a1a;
            height:60px;
            line-height:60px;
            //padding-top:10px;
            bottom:0px;
        }
        #url-frm {
            //width:800px;
            width:80%;
            margin:0 auto;
        }
        #url-txt-url{
            //width: 550px;
            width: 80%;
            height: 20px;
            padding: 5px;
            //font: 13px "Helvetica Neue",Helvetica,Arial,sans-serif;
            border: 0px none;
            background: none repeat scroll 0% 0% #FFF;
            border-radius:3px;
            font-family: 13px Montserrat,sans-serif!important;
            color: #666;
        }
        #url-logo{
            font-size:14px;
            padding-right:5px;
            color:#FFF;
        }
        #url-btn-go {
            border: 1px solid #00a5e5;
            border-radius:3px;
            background: #00a5e5;
            color: #fff;
            font-size: 16px;
        }

        @media screen and (max-width: 500px) {
            #url-txt-url{
                width:60%;
            }
            #url-frm {
                width:100%;
            }
        }
        @media screen and (max-width: 768px) {
            #url-txt-url{
                width:60%;
            }
            #url-frm {
                width:100%;
            }
        }
        @media screen and (max-width: 320px) {
            #url-txt-url{
                width:50%;
            }
            #url-frm {
                width:100%;
            }
        }

    </style>
    <script type="text/javascript">
        function z_go() {
            var value = document.getElementById('url-txt-url').value;
            if (value === '')
                return;
            if (!/(https?:)\/\//.test(value))
                value = 'http://' + value;
            var b = new Base64();
            var url = b.encode(value);
            window.location.href = '/proxy.html?__q=' + url;
        }

        function z_keypress(e) {
            var keynum = -1;
            if (window.event) {
                keynum = e.keyCode;
            } else if(e.which) { // Netscape/Firefox/Opera
                keynum = e.which;
            }
            if (keynum == 13)
                z_go();
        }

        var url_text_selected = false;
        function smart_select(ele){
            ele.onblur = function(){
                url_text_selected = false;
            };
            ele.onclick = function(){
                if(url_text_selected == false){
                    this.focus();
                    this.select();
                    url_text_selected = true;
                }
            };
        }
    </script>

    <div id="url-nav">
        <div id="url-frm">
            <span  id="url-logo">CLIB PROXY SERVER&nbsp</span>
            <input id="url-txt-url"  type="text"   name="url" value="https://www.baidu.com/" autocomplete="off" onkeypress="return z_keypress(event);" />
            <input id="url-btn-go"   type="button" value="Go" onclick="z_go();" />
        </div>
    </div>

<script type="text/javascript">
    function gup(name) {
        name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
        var regexS = "[\\?&]" + name + "=([^&#]*)";
        var regex = new RegExp(regexS);
        var results = regex.exec(location.href);
        if (results === null) {
            return null;
        }
        else {
            return results[1];
        }
    }

    $(document).ready(function(){
        var b = new Base64();
        var url = b.decode(gup('__q'));
        $('#url-txt-url').val(url);
    });

    smart_select(document.getElementById("url-txt-url"));
/*
    var show_url_nav = true;
    function ctl_url_nav() {
        if (show_url_nav == true) {
            show_url_nav = false;
            $('#url-nav').fadeOut(1000);
        } else {
            show_url_nav = true;
            $('#url-nav').fadeIn(1000);
        }
    }
    ctl_url_nav();
*/

    function Base64() {
        // private property
        _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-=";
        // public method for encoding
        this.encode = function (input) {
            var output = "";
            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
            var i = 0;
            input = _utf8_encode(input);
            while (i < input.length) {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);
                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;
                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }
                output = output +
                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
            }
            return output;
        }

        // public method for decoding
        this.decode = function (input) {
            var output = "";
            var chr1, chr2, chr3;
            var enc1, enc2, enc3, enc4;
            var i = 0;
            input = input.replace(/[^A-Za-z0-9\+\-\=]/g, "");
            while (i < input.length) {
                enc1 = _keyStr.indexOf(input.charAt(i++));
                enc2 = _keyStr.indexOf(input.charAt(i++));
                enc3 = _keyStr.indexOf(input.charAt(i++));
                enc4 = _keyStr.indexOf(input.charAt(i++));
                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;
                output = output + String.fromCharCode(chr1);
                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                }
            }
            output = _utf8_decode(output);
            return output;
        }

        // private method for UTF-8 encoding
        _utf8_encode = function (string) {
            string = string.replace(/\r\n/g,"\n");
            var utftext = "";
            for (var n = 0; n < string.length; n++) {
                var c = string.charCodeAt(n);
                if (c < 128) {
                    utftext += String.fromCharCode(c);
                } else if((c > 127) && (c < 2048)) {
                    utftext += String.fromCharCode((c >> 6) | 192);
                    utftext += String.fromCharCode((c & 63) | 128);
                } else {
                    utftext += String.fromCharCode((c >> 12) | 224);
                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                    utftext += String.fromCharCode((c & 63) | 128);
                }

            }
            return utftext;
        }

        // private method for UTF-8 decoding
        _utf8_decode = function (utftext) {
            var string = "";
            var i = 0;
            var c = c1 = c2 = 0;
            while ( i < utftext.length ) {
                c = utftext.charCodeAt(i);
                if (c < 128) {
                    string += String.fromCharCode(c);
                    i++;
                } else if((c > 191) && (c < 224)) {
                    c2 = utftext.charCodeAt(i+1);
                    string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                    i += 2;
                } else {
                    c2 = utftext.charCodeAt(i+1);
                    c3 = utftext.charCodeAt(i+2);
                    string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                    i += 3;
                }
            }
            return string;
        }
    }
</script>